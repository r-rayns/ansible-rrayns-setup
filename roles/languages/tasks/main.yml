---
# tasks file for languages
- name: Install Go check
  pause:
    prompt: "Install Go(v1.22)? (yes/no)"
  register: install_go

- name: Download Go language
  become: true
  become_user: '{{ default_user }}'
  get_url:
    url: https://go.dev/dl/go1.22.2.linux-amd64.tar.gz
    dest: '/home/{{ default_user }}/Downloads/go1.22.2.linux-amd64.tar.gz'
    validate_certs: true
    checksum: sha256:5901c52b7a78002aeff14a21f93e0f064f74ce1360fce51c6ee68cd471216a17
  when: install_go.user_input | bool

- name: Remove previous Go installation
  file:
    state: absent
    path: /usr/local/go
  when: install_go.user_input | bool

- name: Install Go
  unarchive:
    src: '/home/{{ default_user }}/Downloads/go1.22.2.linux-amd64.tar.gz'
    dest: /usr/local/
    owner: root
    group: root
  when: install_go.user_input | bool

- name: Check for GOROOT in .zshenv
  become: true
  become_user: '{{ default_user }}'
  lineinfile:
    path: /home/{{ default_user }}/.zshenv
    line: 'export GOROOT'
    state: present
    create: yes
  check_mode: yes
  register: goroot_present
  when: install_go.user_input | bool

- name: Add GOROOT to .zshenv
  become: true
  become_user: '{{ default_user }}'
  lineinfile:
    path: /home/{{ default_user }}/.zshenv
    line: 'export GOROOT=/usr/local/go'
    create: yes
  when: (install_go.user_input | bool) and 
    (not goroot_present | bool)

- name: Add GOROOT to $PATH
  become: true
  become_user: '{{ default_user }}'
  lineinfile:
    path: /home/{{ default_user }}/.zshenv
    line: 'export PATH=$PATH:$GOROOT/bin'
  when: (install_go.user_input | bool) and 
    (not goroot_present | bool)
  
- name: Install Node Version Manager (NVM) check
  pause:
    prompt: "Install Node Version Manager? (yes/no)"
  register: install_nvm

- name: Install NVM
  when: install_nvm.user_input | bool
  block:
    - name: Download NVM(v0.39.7) installation script
      get_url:
        url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh
        dest: /home/{{ default_user }}/install_nvm.sh
        mode: '0755'

    - name: Run NVM installation script
      become: true
      become_user: "{{ default_user }}"
      shell: ~/install_nvm.sh

    - name: Remove NVM installer script
      become: true
      become_user: "{{ default_user }}"
      file:
        path: "~/install_nvm.sh"
        state: absent

- name: Install Python2 check
  pause:
    prompt: "Install Python2? (yes/no)"
  register: install_python2

- name: Install Python2
  apt:
    pkg:
      - python2
  when: install_python2.user_input | bool
  
